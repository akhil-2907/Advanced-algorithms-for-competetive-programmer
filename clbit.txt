#include<bits/stdc++.h>
using namespace std;
vector<int>vect[1000000];
#define INF 1000000000
int arr[1000000];
void update(int u,int v,int x)
{
  for(auto i:vect[u])
  {
    while(i!=v)
    {
      dfs(i,v,x)
    }
  }
  
}
int dfs(int node,int par,int k)
{
  int k =arr[node]^7;
  cout<<k<<" "<<node<<endl;
  int r =max(-INF,k);
  for(auto child :vect[node])
  {
    if(child!=par)
    {
      dfs(child,node);
    }
  }
  return r;
}
int main()
{int t;  cin>>t;
while(t--){
  for(int i=0;i<1000000;i++)
  {
    vect[i].clear();
    arr[i]=0;
  }
  int n,q;
  cin>>n>>q;
  for(int i=1;i<=n;i++) cin>>arr[i];
  for(int i=1;i<n;i++)
  {int a,b;
  cin>>a>>b;
    vect[a].push_back(b);
    vect[b].push_back(a);
  }
  for(int i=1;i<=q;i++)
  {
    int code;
    if(code==1)
    { cin>>u>>v>>x;
      update()
    }
    if(code==2)
    {
      cin>>x>>k;
      dfs( x,-1,k)
    }
  }
  
}
}